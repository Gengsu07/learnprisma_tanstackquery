generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model test {
  id       Int    @id @default(autoincrement())
  username String @db.VarChar(250)
  password String
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String   @map("firstName")
  role    Role     @default(USER)
  posts   Post[]
  profile Profile?
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  userId Int    @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String
  published  Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  authorId   Int
  likeNum    Int        @default(0)
  author     User       @relation(fields: [authorId], references: [id])
  categories Category[] @relation("CategoryToPost")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[] @relation("CategoryToPost")
}

model mpn {
  admin         String?
  kdmap         String?
  kdbayar       String?
  masa          String?
  masa2         String?
  tahun         String?
  tanggalbayar  Int?
  bulanbayar    Int?
  tahunbayar    Int?
  datebayar     DateTime? @db.Date
  nominal       Float?    @db.Real
  ket           String?
  seksi         String?
  segmentasi_wp String?
  jenis_wp      String?
  nama_klu      String?
  kd_kategori   String?
  nm_kategori   String?
  nm_golpok     String?
  map           String?
  npwp15        String?
  nama_wp       String?
  nama_ar       String?
  ntpn          String?
  id            Int       @id
}

enum Role {
  USER
  ADMIN
}

enum Status {
  NOT_STARTED
  IN_PROGRESS
  DONE
}


model Todo{
  id         Int      @id @default(autoincrement())
  title      String
  description String
  status     Status @default(NOT_STARTED)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}